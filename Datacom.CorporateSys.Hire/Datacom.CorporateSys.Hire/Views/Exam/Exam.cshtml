@using System.Web.UI.WebControls
@using Datacom.CorporateSys.Hire.Helpers
@model Datacom.CorporateSys.Hire.ViewModels.ExamViewModel

@{
    ViewBag.Title = "Datacom internal interview exam";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h3>@ViewBag.Title.</h3>
            </hgroup>
        </div>
    </section>
}

        <article>
            <fieldset>
                <p>
                    
                </p>
                <p>
                    @{ Html.RenderPartial("~/Views/Exam/QuestionControl.cshtml", Model.Exam.Questions.First(x => x.Sequence == Model.Exam.CurrentQuestionNumber), new ViewDataDictionary { { "IsLastQuestion", (Model.Exam.Questions.Count(x=>x.SelectedOption==null)<=1) } }); }
                </p>
                <br />
                <p >
                    
                    <div style="float: left; text-align: left; width: 25%;">
                        <h4>
                            @if (Model.Exam.CurrentQuestionNumber > 1)
                            {

                                @Html.ActionLink("Previous Question", "Exam", "Exam", new
                                {
                                    // htmlAttributes
                                    questionNumber = Model.Exam.CurrentQuestionNumber - 1
                                }, null)

                            }
                        </h4>
                    </div>
                    <div style="float: left; text-align: center; width: 50%;">
                        @using (Html.BeginForm("Exam", "Exam", FormMethod.Post, new {id = "formJumpToQuestion"}))
                        {
                            
                            var list = new Dictionary<int, string>();

                            for (int i = 1; i <= Model.Exam.Questions.ToList().Count; i++)
                            {

                                list.Add(i, "Jump to question" + ((i==Model.Exam.CurrentQuestionNumber)?"...": ( i + (Model.Exam.Questions[i - 1].SelectedOption == null ? " (not answered)" : ""))));
                            }


                            @Html.DropDownList("ddlQuestionJump", new SelectList(list.AsEnumerable(), "Key", "Value", Model.Exam.CurrentQuestionNumber), new {@onchange = "this.form.action='Exam?questionNumber='+$('#ddlQuestionJump').val();this.form.submit();", @class = "form-control"})
                        }
                    </div>
                    <div style="float: left;  text-align: right; width: 25%;">
                        <h4>
                            @if (Model.Exam.CurrentQuestionNumber < Model.Exam.Questions.ToList().Count)
                            {

                                @Html.ActionLink("Next Question", "Exam", "Exam", new
                                {
                                    // htmlAttributes
                                    @class = "btn btn-default",
                                    questionNumber = Model.Exam.CurrentQuestionNumber + 1
                                }, null)

                            }
                        </h4>
                    </div>
       

                </p>
            </fieldset>
    </article>

<aside>
    <p>
        <h3>@Html.DisplayFor(model => model.Candidate.FirstName) @Html.DisplayFor(model => model.Candidate.LastName)</h3>
    </p>

    <p>
        Examiner = @Html.DisplayFor(model => model.Exam.Examiner)
    </p>

    <p>
        @{
            var answeredQuestions = Model.Exam.Questions.Where(x => x.SelectedOption != null).ToList().Count;
            var totalQuestions = Model.Exam.Questions.Count();
        }
        Total Questions (Answered) = @totalQuestions (@answeredQuestions)
        <br/>
        <progress max="@totalQuestions" value="@answeredQuestions" title="Your progress" ></progress>
    </p>
    
    
</aside>