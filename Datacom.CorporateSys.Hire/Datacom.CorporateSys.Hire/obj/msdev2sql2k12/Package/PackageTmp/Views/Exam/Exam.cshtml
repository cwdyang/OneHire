@using System.Web.UI.WebControls
@using Datacom.CorporateSys.Hire.Helpers
@model Datacom.CorporateSys.Hire.ViewModels.ExamViewModel

@{
    ViewBag.Title = "Datacom internal interview exam";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h3>@ViewBag.Title.</h3>
            </hgroup>
        </div>
    </section>
}

<article>
    <fieldset>

        <div>

            <div style="float: left; text-align: left;">
                
                    @if (Model.Exam.CurrentQuestionNumber > 1)
                    {
                        <h4>
                            @Html.ActionLink("Previous Question  .", "Exam", "Exam", new
                        {
                            // htmlAttributes
                            questionNumber = Model.Exam.CurrentQuestionNumber - 1
                        }, null)
                        </h4>
                    }
                        
            </div>

            <div style="float: left;  text-align: right;">
                
                    @if (Model.Exam.CurrentQuestionNumber < Model.Exam.Questions.ToList().Count)
                    {
                        <h4>
                            @Html.ActionLink("Next Question", "Exam", "Exam", new
                        {
                            // htmlAttributes
                            @class = "btn btn-default",
                            questionNumber = Model.Exam.CurrentQuestionNumber + 1
                        }, null)
                        </h4>
                    }
                        
            </div>
        </div> 
    </fieldset>
</article>
<article>
    <div>
        @{ Html.RenderPartial("~/Views/Exam/QuestionControl.cshtml", Model.Exam.Questions.First(x => x.Sequence == Model.Exam.CurrentQuestionNumber), new ViewDataDictionary { { "IsLastQuestion", (Model.Exam.Questions.Count(x => x.SelectedOption == null) <= 1) } }); }
    </div>
</article>

<aside>
    <p>
        <h3>@Html.DisplayFor(model => model.Candidate.FirstName) @Html.DisplayFor(model => model.Candidate.LastName)</h3>
    </p>

    <p>
        Examiner = @Html.DisplayFor(model => model.Exam.Examiner)
    </p>

    <p>
        @{
            var answeredQuestions = Model.Exam.Questions.Where(x => x.SelectedOption != null).ToList().Count;
            var totalQuestions = Model.Exam.Questions.Count();
        }
        <b>Answered / Total Questions: @answeredQuestions / @totalQuestions </b>

        <progress max="@totalQuestions" value="@answeredQuestions" title="Your progress" ></progress>
        
        <div >
            @using (Html.BeginForm("Exam", "Exam", FormMethod.Post, new { id = "formJumpToQuestion" }))
            {

                var list = new Dictionary<int, string>();

                for (int i = 1; i <= Model.Exam.Questions.ToList().Count; i++)
                {

                    list.Add(i, ((i == Model.Exam.CurrentQuestionNumber) ? "Jump to question..." : ("Question "+i + (Model.Exam.Questions[i - 1].SelectedOption == null ? " (not answered)" : ""))));
                }
                

                var selectList = new SelectList(list.AsEnumerable(), "Key", "Value", Model.Exam.CurrentQuestionNumber);
                

                @Html.DropDownList("ddlQuestionJump", selectList, new { @onchange = "this.form.action='Exam?questionNumber='+$('#ddlQuestionJump').val();this.form.submit();", @class = "form-control form-control-cellwidth" })
            }
        </div>

    </p>
    
    
</aside>